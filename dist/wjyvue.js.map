{"version":3,"file":"wjyvue.js","mappings":"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","sources":["webpack://wjygrit/webpack/bootstrap","webpack://wjygrit/webpack/runtime/define property getters","webpack://wjygrit/./src/def.js","webpack://wjygrit/webpack/runtime/global","webpack://wjygrit/webpack/runtime/hasOwnProperty shorthand","webpack://wjygrit/./src/Dep.js","webpack://wjygrit/./src/array.js","webpack://wjygrit/./src/Observer.js","webpack://wjygrit/./src/proxy.js","webpack://wjygrit/./src/initData.js","webpack://wjygrit/./src/watcher.js","webpack://wjygrit/./src/compiler/compileTextNode.js","webpack://wjygrit/./src/compiler/compileAttribute.js","webpack://wjygrit/./src/compiler/compilerNode.js","webpack://wjygrit/./src/compiler/compiler.js","webpack://wjygrit/./src/wjyvue.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","export function def(obj, key, val, enumerable) {\n  // debugger;\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true,\n  });\n}\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// 该对象提供 依赖收集(depend)  和 派发更新 (notify)\n// 在 notify 中 去调用 watcher 的 update  方法\n/** vue 项目中包含很多组件, 各个组件是自治的\n *    那么 watcher 可能会有多个\n *    每一个 watcher 用于描述一个渲染行为 或 计算行为\n *      子组件发生数据的更新, 页面需要重新渲染(vue 中 是局部)\n *      例如 vue 中推荐是使用 计算属性 代替复杂的 插值表达式.\n           计算属性是会伴随其使用的属性的变化而变化的\n           `name: () => this.firstName + this.lastName`\n           计算属性 依赖于 属性 firstName 和 属性 lastName\n           只要被依赖的属性发生变化, 那么就会促使计算属性 **重新计算** ( Watcher\n */\n\n/**\n * 依赖收集与派发更新是怎么运行起来的?\n *    我们在访问的时候 就会进行收集, 在修改的时候就会更新, 那么收集什么就更新什么\n *    所谓的依赖收集 **实际上就是告诉当前的 watcher 什么属性被访问了**,\n *    那么在这个 watcher 计算的时候 或 渲染页面的时候 就会 将这些收集到的属性进行更新.\n */\n\n/**\n *  如何将 属性 与 当前 watcher 关联起来?\n *    在全局 准备一个 targetStack ( watcher 栈, 简单的理解为 watcher \"数组\", 把一个操作中需要使用的 watcher 都存储起来 )\n *    在 Watcher 调用 get 方法的时候, 将当前 Watcher 放到全局, 在 get 之前结束的时候(之后), 将这个 全局的 watcher 移除. 提供: pushTarget, popTarget\n *    在每一个属性中 都有 一个 Dep 对象\n *\n *   我们在访问对象属性的时候 ( get ), 我们的渲染 watcher 就在全局中.\n *   将 属性与 watcher 关联, 其实就是将当前渲染的 watcher 存储到属性相关的 dep 中.\n *   同时, 将 dep 也存储到 当前全局的 watcher 中. ( 互相引用的关系 )\n *\n *   属性引用了当前的渲染 watcher, **属性知道谁渲染它**\n *   当前渲染 watcher 引用了 访问的属性 ( Dep ), **当前的 Watcher 知道渲染了什么属性**\n */\n\nlet depid = 0;\nexport default class Dep {\n  constructor() {\n    this.id = depid++;\n    this.subs = []; // 存储的事与当前Dep 关联的 watcher\n  }\n\n  addSub(sub) {\n    this.subs.push(sub);\n  }\n\n  removeSub(sub) {\n    for (let i = this.subs.length - 1; i >= 0; i--) {\n      if (sub === this.subs[i]) {\n        this.subs.splice(i, 1);\n      }\n    }\n  }\n\n  /**就是将当前的Dep与当前的watcher 互相关联*/\n  depend() {\n    if (Dep.target) {\n      this.addSub(Dep.target); // 将当前的 watcher 存入到当前的 Dep 上\n      Dep.target.addDep(this); // 将当前的 dep 与 当前的渲染watcher关联\n    }\n  }\n\n  /**\n   * 触发与之关联的 watcher 的 update 方法, 起到更新作用\n   */\n  notify() {\n    // 在真实的 Vue 中是依次触发 this.subs 中的 watcher 的 update 方法\n    // 此时, deps 中已经关联到需要使用的 watcher 了\n    let deps = this.subs.slice();\n    deps.forEach((watcher) => {\n      watcher.update();\n    });\n  }\n}\n\n// 全局的容器存储渲染 watcher\nDep.target = null;\n\nlet targetStack = [];\n\n/** 将当前操作的 watcher 存储到全局 watcher 中, 参数 target 就是当前的 watcher */\nexport function pushTarget(target) {\n  targetStack.unshift(Dep.target); // vue 源码中是 push\n  Dep.target = target;\n}\n\n/**将当前 watcher 踢出*/\nexport function popTarget() {\n  Dep.target = targetStack.shift(); // 踢到最后,就是Undefined\n}\n\n/**\n * 在 watcher 调用 get 方法的时候, 调用 pushTarget(this)\n * 调用结束, 调用 popTarget()\n * */\n","import { def } from \"./def.js\";\n\n// 备份 数组 原型对象\nconst arrayProto = Array.prototype;\n// 通过继承的方式 创建新的 arrayMethdos\n// 原理\n// let arr = []\n// arr -> Array.prototype -> Object.prototype\n// arr -> 改写的方法  -> Array.prototype -> Object.prototype\nexport const arrayMethods = Object.create(arrayProto);\n\n// 操作数组的七个方法，这七个方法可以改变数组自身\nconst methodsToPatch = [\n  \"push\",\n  \"pop\",\n  \"shift\",\n  \"unshift\",\n  \"splice\",\n  \"sort\",\n  \"reverse\",\n];\n\n// 改写原型方法\nmethodsToPatch.forEach(function (method) {\n  // 缓存原生方法,比如Push\n  const original = arrayProto[method];\n\n  // debugger;\n  def(arrayMethods, method, function mutator(...args) {\n    // 执行原生方法\n    const result = original.apply(this, args);\n    const ob = this.__ob__;\n    console.log(\"method\", ob);\n    let inserted;\n    switch (method) {\n      case \"push\":\n      case \"unshift\":\n        inserted = args;\n        break;\n      case \"splice\":\n        inserted = args.slice(2);\n        break;\n    }\n    // 对新插入的元素做响应式处理\n    if (inserted) ob.observeArray(inserted);\n    // 通知更新\n    ob.dep.notify();\n    return result;\n  });\n});\n//-------------------数组响应式-ends\n","import { def } from \"./def.js\";\nimport Dep from \"./Dep.js\";\nimport { arrayMethods } from \"./array.js\";\n\nexport class Observer {\n  constructor(value) {\n    this.value = value;\n    this.dep = new Dep();\n    def(value, \"__ob__\", this);\n    if (Array.isArray(value)) {\n      // 对每一个元素处理\n      value.__proto__ = arrayMethods;\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  walk(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      let prop = keys[i];\n      defineReactive(obj, keys[i], obj[prop]);\n    }\n  }\n\n  // 处理数组\n  observeArray(items) {\n    for (let i = 0; i < items.length; i++) {\n      observe(items[i]); // 对每个成员进行响应式处理\n    }\n  }\n}\n\nexport function observe(value) {\n  let ob;\n\n  if (typeof value === \"object\" && value != null) {\n    ob = new Observer(value);\n  }\n  return ob;\n}\n\n/**响应式核心**/\nexport function defineReactive(data, key, value) {\n  // 过滤非对象\n\n  const dep = new Dep();\n\n  let childOb = observe(value);\n\n  Object.defineProperty(data, key, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      dep.depend();\n      if (childOb) {\n        childOb.dep.depend();\n        if (Array.isArray(value)) {\n          // 嵌套为数组的情况\n          dependArray(value);\n        }\n      }\n      return value;\n    },\n    set(newVal) {\n      if (newVal === value) {\n        return;\n      }\n      // 数据变成响应式\n      if (typeof newVal === \"object\" && newVal != null) {\n        observe(newVal);\n      }\n      value = newVal;\n\n      childOb = observe(newVal);\n\n      // 派发更新, 找到全局的 watcher, 调用 update\n      dep.notify();\n    },\n  });\n}\n\nfunction dependArray(value) {\n  for (let e, i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n","/**将某一个对象的属性 访问 映射到某一个属性成员上*/\nexport default function proxy(target, prop, key) {\n  Object.defineProperty(target, key, {\n    enumerable: true,\n    configurable: true,\n    get() {\n      return target[prop][key];\n    },\n    set(nv) {\n      target[prop][key] = nv;\n    },\n  });\n}\n","// initData 方法, 响应式\nimport { observe } from \"./Observer.js\";\nimport proxy from \"./proxy.js\";\nimport WJYVue from \"./wjyvue.js\";\n\nWJYVue.prototype.initData = function () {\n  // 遍历 this._data的成员，将 属性转换为响应式的，将 直接属性，代理到实例上\n  let keys = Object.keys(this._data);\n  // 响应式化\n  observe(this._data);\n  // 代理到app.xxx\n  for (const element of keys) {\n    proxy(this, \"_data\", element);\n  }\n};\n","/*\n    get() 用来计算或执行处理函数\n    update() 公共的外部方法, 该方法会触发内部的run方法\n    run() 运行, 用来判断内部是异步运行还是同步运行等,这个方法最终会调用内部的get方法\n    cleanupDep(), 清除队列\n\n    页面渲染由 get 方法来执行\n\n    我们的 watcher 实例有一个属性vm, 表示的就是 当前的 vm 的实例s\n*/\n\nimport { pushTarget, popTarget } from \"./Dep.js\";\n\nlet watcherid = 0;\n\nexport default class Watcher {\n  /**\n   * @param vm {Object} WJYVue 实例\n   * @param expOrFn {String | Function} 如果是渲染 watcher, 传入的就是函数,\n   *  数据变化就执行这个函数, 相当于之前数据变化执行moutComponent\n   */\n  constructor(vm, expOrfn) {\n    this.vm = vm;\n    this.getter = expOrfn;\n\n    this.id = watcherid++;\n    this.deps = []; // 依赖项\n    this.depIds = {}; // 是一个 Set 类型, 用于保证 依赖项的唯一性 ( 简化的代码暂时不实现这一块 )\n\n    // 一开始需要渲染: 真实 vue 中: this.lazy ? undefined : this.get()\n    this.get();\n  }\n\n  /** 计算, 触发 getter */\n  get() {\n    pushTarget(this);\n    this.getter.call(this.vm, this.vm); // 上下文的问题就解决了\n    popTarget();\n  }\n  /**\n   * 执行, 并判断是懒加载, 还是同步执行, 还是异步执行:\n   * 我们现在只考虑 异步执行 ( 简化的是 同步执行 )\n   */\n  run() {\n    this.get();\n    // 在真正的 vue 中是调用 queueWatcher, 来触发 nextTick 进行异步的执行\n  }\n\n  /** 对外公开的函数, 用于在 属性发生变化时触发的接口 */\n  update() {\n    this.run();\n  }\n\n  /** 清空依赖队列 */\n  cleanupDep() {}\n\n  /**将当前的 dep 与 当前的 watcher 关联*/\n  addDep(dep) {\n    this.deps.push(dep);\n  }\n}\n","import Watcher from \"../watcher.js\";\n\nexport default function compileTextNode(node, vm) {\n  const key = RegExp.$1.trim();\n  function cb() {\n    const value = vm[key];\n    node.textContent =\n      typeof value === \"object\" ? JSON.stringify(value) : String(value);\n  }\n  new Watcher(vm, cb);\n}\n","import Watcher from \"../watcher.js\";\n\nexport default function compileAttribute(node, vm) {\n  const attrs = Array.from(node.attributes);\n  for (const attr of attrs) {\n    const { name, value } = attr;\n    if (name.match(/v-on:click/)) {\n      // <button v-on:click=\"xx\" />\n      compileVOn(node, value, vm);\n    } else if (name.match(/v-bind:/)) {\n      // <span v-bind:title=\"xx\" />\n      compileVBind(node, name, value, vm);\n    } else if (name.match(/v-model/)) {\n      // v-model\n      compileVModel(node, value, vm);\n    }\n  }\n}\n\n/**\n * v-on:click , 添加一个click事件\n * @param node\n * @param method\n * @param vm\n */\nfunction compileVOn(node, method, vm) {\n  node.addEventListener(\"click\", function (...args) {\n    vm.$options.methods[method].apply(vm, args);\n  });\n}\n\nfunction compileVBind(node, attrName, attrValue, vm) {\n  // 移除节点上已有的v-bind:xxx属性\n  node.removeAttribute(attrName);\n  attrName = attrName.replace(/v-bind:/, \"\");\n  function cb() {\n    node.setAttribute(attrName, vm[attrValue]);\n  }\n\n  new Watcher(vm, cb);\n}\n\nfunction compileVModel(node, key, vm) {\n  let { tagName, type } = node;\n  tagName = tagName.toLowerCase();\n  if (tagName === \"input\" && type === \"text\") {\n    // <input type=\"text\" v-model=\"key\" />\n    // 输入框的初始值\n    node.value = vm[key];\n    // 响应式\n    node.addEventListener(\"input\", function () {\n      vm[key] = node.value;\n    });\n  } else if (tagName === \"input\" && type === \"checkbox\") {\n    // <input type=\"checkbox\" v-model=\"key\" />\n    node.checked = vm[key];\n    node.addEventListener(\"change\", function () {\n      vm[key] = node.checked;\n    });\n  } else if (tagName === \"select\") {\n    // <select v-model=\"selectValue\" />\n    node.value = vm[key];\n    node.addEventListener(\"change\", function () {\n      vm[key] = node.value;\n    });\n  }\n}\n","// 生成虚拟带有{{}}的DOM, 相当于AST\nimport Watcher from \"../watcher.js\";\nimport compileTextNode from \"./compileTextNode.js\";\nimport compileAttribute from \"./compileAttribute.js\";\n\nexport default function compileNode(nodes, vm) {\n  for (const node of nodes) {\n    if (node.nodeType === 1) {\n      // 元素节点\n      // 编译属性,如 v-bind, v-model, v-on\n\n      compileAttribute(node, vm);\n      compileNode(Array.from(node.childNodes), vm);\n    } else if (node.nodeType === 3 && node.textContent.match(/{{(.*)}}/)) {\n      // 当前的节点为文本节点, 比如 <span>{{ key }}</span>\n      compileTextNode(node, vm);\n    }\n  }\n}\n","import compileNode from \"./compilerNode.js\";\nexport default function mount(vm) {\n  let { el } = vm.$options;\n  el = document.querySelector(el);\n  compileNode(Array.from(el.childNodes), vm);\n}\n","import \"./initData.js\";\nimport mount from \"./compiler/compiler.js\";\n\nexport default function WJYVue(options) {\n  this._data =\n    typeof options.data === \"function\" ? options.data() : options.data; // data属性\n  this.$options = options;\n  this._el = options.el;\n  this.initData(); // 将data进行响应式转换, 进行代理\n\n  if (this.$options.el) {\n    this.$mount(); // 挂载\n  }\n}\n\n// 挂载方法\nWJYVue.prototype.$mount = function () {\n  mount(this);\n};\n\nglobal.WJYVue = WJYVue;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","def","obj","val","value","writable","configurable","g","globalThis","this","Function","e","window","prop","prototype","hasOwnProperty","call","depid","Dep","id","subs","sub","push","i","length","splice","target","addSub","addDep","slice","forEach","watcher","update","targetStack","arrayProto","Array","arrayMethods","create","method","original","args","result","apply","ob","__ob__","console","log","inserted","observeArray","dep","notify","Observer","isArray","__proto__","walk","keys","defineReactive","items","observe","data","childOb","depend","dependArray","set","newVal","l","proxy","nv","WJYVue","initData","_data","watcherid","Watcher","vm","expOrfn","getter","deps","depIds","unshift","shift","run","compileTextNode","node","RegExp","$1","trim","textContent","JSON","stringify","String","compileAttribute","attrs","from","attributes","attr","name","match","compileVOn","compileVBind","compileVModel","addEventListener","$options","methods","attrName","attrValue","removeAttribute","replace","setAttribute","tagName","type","toLowerCase","checked","compileNode","nodes","nodeType","childNodes","mount","el","document","querySelector","options","_el","$mount","global"],"sourceRoot":""}